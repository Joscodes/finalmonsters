{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchcompo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","Cardlist","monsters","map","Searchbox","placeholder","handelchange","type","onChange","App","state","s","fetch","then","res","json","user","setState","this","flitermon","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAEaA,EAAK,SAAEC,GAAF,OAClB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,6BAAKN,EAAMG,QAAQI,YCHVC,EAAS,SAACR,GAAD,OAGlB,qBAAKC,UAAU,YAAf,SAA6BD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAC5C,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJdO,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEhB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC0BLG,E,kDA7Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,EAAG,IAJO,E,qDAOd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE9C,WAAU,IAAD,SACiBE,KAAKR,MAArBR,EADD,EACCA,SAAUS,EADX,EACWA,EACZQ,EAAYjB,EAASkB,QAAO,SAACxB,GAAD,OAChCA,EAAQG,KAAKsB,cAAcC,SAASX,EAAEU,kBAExC,OACE,sBAAK3B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAAEN,EAAGY,EAAEC,OAAOC,WAEnD,cAAC,EAAD,CAAUvB,SAAUiB,W,GAzBVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c2718c09.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\nexport const Card=( props)=>(\r\n<div className='card-container'>\r\n    <img src={`https://robohash.org/${props.monster.id}?set=set2&size=280x280`} alt=\"monster\"/>\r\n    <h1>{props.monster.name}</h1>\r\n    <h1>{props.monster.email}</h1>\r\n</div>\r\n)\r\n\r\n","import React from 'react'\r\nimport './card.css'\r\nimport {Card} from './card/card.component'\r\nexport const Cardlist=(props)=>\r\n    \r\n(\r\n    <div className=\"card-list\" >{props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster}/>\r\n      ))}</div>\r\n)\r\n\r\n ","import React from 'react'\r\nimport \"./search.css\"\r\n\r\nexport const Searchbox =({placeholder,handelchange})=>(\r\n    \r\n        <input\r\n          className=\"search\"\r\n          type=\"search\"\r\n          placeholder={placeholder}\r\n          onChange={handelchange }\r\n        />\r\n)","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Cardlist } from \"./components/card-list/card-list.component\";\nimport { Searchbox } from \"./components/searchbox/searchcompo\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      s: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((user) => this.setState({ monsters: user }));\n  }\n  render() {\n    const { monsters, s } = this.state;\n    const flitermon = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(s.toLowerCase())\n    );\n    return (\n      <div className=\"app\">\n        <h2>Monster rolodex</h2>\n        <Searchbox\n          placeholder=\"search monster\"\n          handelchange={(e) => this.setState({ s: e.target.value })}\n        />\n        <Cardlist monsters={flitermon} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}